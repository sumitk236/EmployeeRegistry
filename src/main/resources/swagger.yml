openapi: 3.0.3
info:
  title: Swagger apistore - OpenAPI 3.0
  description: |-
    This is a sample api Store Server based on the OpenAPI 3.0 specification.  You can find out more about)
  termsOfService: http://localhost:8081
  contact:
    email: sumitk236@gmail.com
  license:
    name: API License
    url: http://localhost:8081
  version: 1.0.0
servers:
  - url: http://localhost:8081
tags:
  - name: Employee Api
    description: http://localhost:8081
paths:
  /api/employees:
    get:
      tags:
        - employee controller
      summary: Returns all employees details
      description: Returns a array of employees data
      operationId: getAllEmployee
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Employee'
            application/xml:
              schema:
                $ref: '#/components/schemas/Employee'
        '400':
          description: Invalid ID supplied
        '404':
          description: Employee not found
    post:
      tags:
        - employee controller
      summary: Insert employee record in database
      description: Insert employee record in database
      operationId: saveAllEmployees
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Employee'
          application/xml:
            schema:
              $ref: '#/components/schemas/Employee'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Employee'
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
        '400':
          description: Invalid ID supplied
        '404':
          description: Employee not found
    put:
      tags:
        - employee controller
      summary: Update Employee data in database
      description: Update Employee data in database
      operationId: updateEmployees
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SingleEmployee'
          application/xml:
            schema:
              $ref: '#/components/schemas/SingleEmployee'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SingleEmployee'
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
        '400':
          description: Invalid ID supplied
        '404':
          description: Employee not found

  /api/employee/{employeeId}:
    get:
      tags:
        - employee controller
      summary: Find employee details by ID
      description: For valid response try integer IDs.
      operationId: getEmployeeById
      parameters:
        - name: employeeId
          in: path
          description: ID of order that needs to be fetched
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Employee'
            application/xml:
              schema:
                $ref: '#/components/schemas/Employee'
        '400':
          description: Invalid ID supplied
        '404':
          description: Employee not found
    delete:
      tags:
        - employee controller
      summary: Delete Employee details by ID
      description: For valid response try integer IDs.
      operationId: deleteEmployeeById
      parameters:
        - name: employeeId
          in: path
          description: ID of the order that needs to be deleted
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
        '400':
          description: Invalid ID supplied
        '404':
          description: Employee not found
components:
  schemas:
    SingleEmployee:
      type: object
      properties:
        employeeId:
          type: integer
          format: int64
          example: 7
        employeeName:
          type: string
          description: employee name
          example: Sumit
        dept:
          type: string
          description: dept number
          example: 789
        salary:
          type: number
          format: double
          example: 50.0
      xml:
        name: Employee
    Employee:
      type: array
      items:
        type: object
        properties:
          employeeId:
            type: integer
            format: int64
            example: 7
          employeeName:
            type: string
            description: employee name
            example: Sumit
          dept:
            type: string
            description: dept number
            example: 789
          salary:
            type: number
            format: double
            example: 50.0
        xml:
          name: SingleEmployee